before:
  hooks:
    - go mod tidy

dist: dist/dist-darwin

builds:
  - main: .
    binary: sqlitr2
    env:
      - CGO_ENABLED=1
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
#      - 386
    ldflags:
#      - -linkmode external -extldflags -static
      - -s -w -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

archives:
  - format: binary

#  - id: build_linux
#    env:
#    main: ./main.go
#    goos:
#      - linux
#    goarch:
#      - amd64
#    ldflags:
#      # Note the additional ldflags (-linkmode etc), and the "-tags=netgo" in
#      # flags below. This is to build a static binary.
#      - -linkmode external -extldflags -static -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
#    flags:
#      - -tags=netgo
#      - -v
#
#  - id: build_windows
#    env:
#      - CC=x86_64-w64-mingw32-gcc
#      - CXX=x86_64-w64-mingw32-g++
#    main: ./main.go
#    goos:
#      - windows
#    goarch:
#      - amd64

#archives:
#  -
##    builds: ['build_macos', 'build_linux', 'build_windows']
#    builds: ['build_macos']
#    format: tar.gz
#    files:
#      - README.md
#      - LICENSE
#    format_overrides:
#      - goos: windows
#        format: zip

#
#checksum:
#  name_template: 'checksums.txt'
#snapshot:
#  name_template: "{{ .Tag }}-snapshot"
#changelog:
#  skip: true
#
#
#release:
#  github:
#    owner: neilotoole
#    name: sqlitr2
#  draft: false
#  prerelease: auto

#
#nfpms:
#  -
#    builds: ['build_linux']
#    formats:
#      - deb
#      - rpm
#    vendor: "neilotoole"
#    homepage: "https://github.com/neilotoole/sqltir"
#    maintainer: "neilotoole@apache.org"
#    description: "sqlitr is a trivial Go/CGo SQLite CLI"
#    license: "MIT"
#

#brews:
#  -
#    homepage: "https://github.com/neilotoole/sqlitr2"
#    description: "sqlitr2 is a trivial Go/CGo SQLite CLI"
#    license: "MIT"
#
#    tap:
#      owner: neilotoole
#      name: homebrew-sqlitr2
#
#    install: |
#      bin.install "sqlitr2"
#    test: |
#      system "#{bin}/sqlitr2 --version"
#
#    # Git author used to commit to the repository.
#    # Defaults are shown.
#    commit_author:
#      name: neilotoole
#      email: neilotoole@apache.org

#
#scoop:
#  bucket:
#    owner: neilotoole
#    name: sqlitr2
#  homepage: "https://github.com/neilotoole/sqlitr2"
#  description: "sqlitr2 is a trivial Go/CGo SQLite CLI"
#
#snapcrafts:
#  # For this to work, login to snapcraft.
#  # - On macOS, "brew install snapcraft", then "snapcraft login".
#  # - Or just use neilotoole/xcgo: https://github.com/neilotoole/xcgo/wiki/Snapcraft
#  -
#    builds:
#      - build_linux
#    name: sqlitr2
#    summary: "Trivial SQLite query tool to demonstrate neilotoole/xcgo"
#    description: |
#      sqlitr is a trivial query tool for SQLite. It was created as a demonstration for neilotoole/xcgo, which is a Go cross-compiling docker builder image.
#    grade: stable
#    confinement: strict
#    publish: true
#    license: MIT
#    base: core18
#    apps:
#      sqlitr2:
#        # If your app requires extra permissions to work outside of its default
#        # confined space, declare them here.
#        # You can read the documentation about the available plugs and the
#        # things they allow:
#        # https://snapcraft.io/docs/reference/interfaces.
#        #
#        # Declare "home" and "network" plugs to grant access to
#        # the user home dir, and the network
#        plugs: ["home", "network"]
#
#dockers:
#  -
#    goos: linux
#    goarch: amd64
#    builds:
#      - build_linux
#    image_templates:
#      - "neilotoole/sqlitr2:{{ .Version }}"
#    extra_files:
#      - README.md
#      - LICENSE
#      - testdata/example.sqlite
