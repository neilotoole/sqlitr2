name: Main pipeline
on: push

env:
  GO_VERSION: 1.19.2
  GORELEASER_VERSION: 1.12.3

jobs:
  build-test:
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
#        os: [ macos-12, ubuntu-22.04 ]
#        os: [ macos-12 ]
#        os: [ macos-12, ubuntu-22.04, windows-2022]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: Build
#        run: go build -v ./...
#
#      - name: Test
#        run: go test -v  ./...

  publish-gate:
    #    if: startsWith(github.ref, 'refs/tags/v) # Only run this if it's a tag, e.g. v1.0.1
    needs: build-test
    runs-on: ubuntu-22.04

    steps:
      - name: Gate
        run: echo "We are free to publish"

  build-binaries-darwin:
    needs: publish-gate
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: GoReleaser (build darwin binaries)
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_VERSION }}
          args: build --skip-validate --rm-dist -f .goreleaser-darwin.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Upload assets (darwin)
        uses: actions/upload-artifact@v3
        with:
          name: dist-darwin
          path: |
            dist-darwin


  build-binaries-linux-amd64:
    needs: publish-gate
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: GoReleaser (build linux-amd64 binaries)
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_VERSION }}
          args: build --skip-validate --rm-dist -f .goreleaser-linux-amd64.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: install tree
        run: sudo apt update && sudo apt install tree

      - name: show dist
        run: tree dist-linux

      - name: Upload assets (linux-amd64)
        uses: actions/upload-artifact@v3
        with:
          name: dist-linux-amd64
          path: |
            dist-linux

  build-binaries-linux-arm64:
    needs: publish-gate
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install toolchain dependencies
        run: |
          sudo apt update
          sudo apt install -y \
          binutils-aarch64-linux-gnu \
          binutils-arm-linux-gnueabi \
          crossbuild-essential-arm64 \
          gcc-aarch64-linux-gnu \
          gcc-arm-linux-gnueabi

      - name: GoReleaser (build linux-arm64 binaries)
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_VERSION }}
          args: build --skip-validate --rm-dist -f .goreleaser-linux-arm64.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: install tree
        run: sudo apt update && sudo apt install tree

      - name: show dist
        run: tree dist-linux

      - name: Upload assets (linux-arm64)
        uses: actions/upload-artifact@v3
        with:
          name: dist-linux-arm64
          path: |
            dist-linux

  show-it:
    needs: [ build-binaries-darwin, build-binaries-linux-amd64, build-binaries-linux-arm64 ]
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist-darwin
          path: dist-darwin

      - uses: actions/download-artifact@v3
        with:
          name: dist-linux-amd64
          path: dist-linux

      - uses: actions/download-artifact@v3
        with:
          name: dist-linux-arm64
          path: dist-linux

      - name: install tree
        run: sudo apt update && sudo apt install tree

      - name: show dist*
        run: tree dist*


  publish:
    if: startsWith(github.ref, 'refs/tags/vXXX')  # Only run this if it's a tag, e.g. v1.0.1
    needs: [ build-binaries-darwin, build-binaries-linux-amd64, build-binaries-linux-arm64 ]
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    - uses: actions/download-artifact@v3
      with:
        name: dist-darwin
        path: dist-darwin

    - uses: actions/download-artifact@v3
      with:
        name: dist-linux-amd64
        path: dist-linux

    - uses: actions/download-artifact@v3
      with:
        name: dist-linux-arm64
        path: dist-linux

    - name: GoReleaser (publish)
      uses: goreleaser/goreleaser-action@v3
      with:
        distribution: goreleaser-pro
        version: ${{ env.GORELEASER_VERSION }}
        args: release -f .goreleaser.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
