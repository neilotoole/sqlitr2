name: Main pipeline
on: push

env:
  GO_VERSION: 1.19.2
  GORELEASER_VERSION: 1.12.3

  # PUBLISH is true if the tag starts with 'v', e.g. 'v1.0.1'
  PUBLISH: ${{startsWith(github.ref, 'refs/tags/v')}}

jobs:
  wubble-false:
    runs-on: ubuntu-22.04

    steps:
      - name: if-envar-false
        if: env.PUBLISH == false
        run: echo she is false
      - name: if-envar-true
        if: env.PUBLISH == true
        run: echo she is true

  wubble-true:
    runs-on: ubuntu-22.04

    steps:
      - name: if-envar-true
        if: env.PUBLISH == 'true'
        run: echo she is true
      - name: if-envar-false
        if: env.PUBLISH == 'false'
        run: echo she is false


#
#  go-test:
#    strategy:
#      matrix:
#        os: [ macos-12, ubuntu-22.04, windows-2022]
#
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: Build
#        run: go build -v ./...
#
#      - name: Test
#        run: go test -v  ./...
#
#
#  build-binaries-darwin:
#    needs: go-test
#    runs-on: macos-12
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: GoReleaser (build darwin binaries)
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser-pro
#          version: ${{ env.GORELEASER_VERSION }}
#          args: build --skip-validate=${{ !env.PUBLISH }} --rm-dist -f .goreleaser-darwin.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#
#      - name: Upload artifacts (darwin)
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist-darwin
#          path: dist-darwin
#
#  build-binaries-linux-amd64:
#    needs: go-test
#    runs-on: ubuntu-22.04
#
#    steps:
#      - name: Dump env context
#        id: github_context_step2
#        run: echo '${{ toJSON(env) }}'
#
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: GoReleaser (build linux-amd64 binaries)
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser-pro
#          version: ${{ env.GORELEASER_VERSION }}
#          args: build --skip-validate=${{ !env.PUBLISH }} --rm-dist -f .goreleaser-linux-amd64.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#
#      - name: Upload artifacts (linux-amd64)
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist-linux-amd64
#          path: dist-linux
#
#  build-binaries-linux-arm64:
#    needs: go-test
#    runs-on: ubuntu-22.04
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: Install toolchain dependencies
#        run: |
#          sudo apt update
#          sudo apt install -y gcc-aarch64-linux-gnu
#
#      - name: GoReleaser (build linux-arm64 binaries)
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser-pro
#          version: ${{ env.GORELEASER_VERSION }}
#          args: build --skip-validate=${{ !env.PUBLISH }} --rm-dist -f .goreleaser-linux-arm64.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#
#      - name: Upload artifacts (linux-arm64)
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist-linux-arm64
#          path: dist-linux
#
#  build-binaries-windows:
#    needs: go-test
#    runs-on: windows-2022
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: ${{ env.GO_VERSION }}
#
#      - name: GoReleaser (build windows binaries)
#        uses: goreleaser/goreleaser-action@v3
#        with:
#          distribution: goreleaser-pro
#          version: ${{ env.GORELEASER_VERSION }}
#          args: build --skip-validate=${{ !env.PUBLISH }} --rm-dist -f .goreleaser-windows.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#
#      - name: Upload artifacts (windows)
#        uses: actions/upload-artifact@v3
#        with:
#          name: dist-windows
#          path: dist-windows
#
#  publish:
#    needs: [ build-binaries-darwin, build-binaries-linux-amd64, build-binaries-linux-arm64, build-binaries-windows ]
#    runs-on: ubuntu-22.04
##    if: contains(env.publish, 'true')
#    if: env.PUBLISH=true
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#
#    - name: Set up Go
#      uses: actions/setup-go@v3
#      with:
#        go-version: ${{ env.GO_VERSION }}
#
#    - name: Download artifacts (darwin)
#      uses: actions/download-artifact@v3
#      with:
#        name: dist-darwin
#        path: dist-darwin
#
#    - name: Download artifacts (linux-amd64)
#      uses: actions/download-artifact@v3
#      with:
#        name: dist-linux-amd64
#        path: dist-linux
#
#    - name: Download artifacts (linux-arm64)
#      uses: actions/download-artifact@v3
#      with:
#        name: dist-linux-arm64
#        path: dist-linux
#
#    - name: Download artifacts (windows)
#      uses: actions/download-artifact@v3
#      with:
#        name: dist-windows
#        path: dist-windows
#
#    - name: GoReleaser (publish)
#      uses: goreleaser/goreleaser-action@v3
#      with:
#        distribution: goreleaser-pro
#        version: ${{ env.GORELEASER_VERSION }}
#        args: release -f .goreleaser.yml
#      env:
#        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
#        GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#        FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
